{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Files\\\\Goals\\\\Myprojects\\\\dynamic-dashboard\\\\src\\\\components\\\\IoTWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IoTWidget() {\n  _s();\n  const [sensorData, setSensorData] = useState(null);\n  useEffect(() => {\n    // Example API call for IoT sensor data\n    fetch('https://api.example.com/sensors').then(response => response.json()).then(data => setSensorData(data));\n  }, []);\n  if (!sensorData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"   \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"IoT Sensor Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", sensorData.temperature, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Humidity: \", sensorData.humidity, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pressure: \", sensorData.pressure, \" hPa\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(IoTWidget, \"b5axGbR/lRweVIVqXNxgJ0XLyYk=\");\n_c = IoTWidget;\nexport default IoTWidget;\nvar _c;\n$RefreshReg$(_c, \"IoTWidget\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","IoTWidget","_s","sensorData","setSensorData","fetch","then","response","json","data","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","humidity","pressure","_c","$RefreshReg$"],"sources":["C:/My Files/Goals/Myprojects/dynamic-dashboard/src/components/IoTWidget.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction IoTWidget() {\r\n  const [sensorData, setSensorData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Example API call for IoT sensor data\r\n    fetch('https://api.example.com/sensors')\r\n      .then(response => response.json())\r\n      .then(data => setSensorData(data));\r\n  }, []);\r\n\r\n  if (!sensorData) return <div>   </div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>IoT Sensor Data</h2>\r\n      <p>Temperature: {sensorData.temperature}Â°C</p>\r\n      <p>Humidity: {sensorData.humidity}%</p>\r\n      <p>Pressure: {sensorData.pressure} hPa</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IoTWidget;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,aAAa,CAACK,IAAI,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACN,UAAU,EAAE,oBAAOH,OAAA;IAAAU,QAAA,EAAK;EAAG;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEtC,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBd,OAAA;MAAAU,QAAA,GAAG,eAAa,EAACP,UAAU,CAACY,WAAW,EAAC,OAAE;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9Cd,OAAA;MAAAU,QAAA,GAAG,YAAU,EAACP,UAAU,CAACa,QAAQ,EAAC,GAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACvCd,OAAA;MAAAU,QAAA,GAAG,YAAU,EAACP,UAAU,CAACc,QAAQ,EAAC,MAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV;AAACZ,EAAA,CApBQD,SAAS;AAAAiB,EAAA,GAATjB,SAAS;AAsBlB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}