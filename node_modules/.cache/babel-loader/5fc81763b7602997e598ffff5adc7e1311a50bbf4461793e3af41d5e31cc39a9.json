{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Files\\\\Goals\\\\Myprojects\\\\dynamic-dashboard\\\\src\\\\components\\\\StockWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockWidget() {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch stock data from the new API\n    fetch('https://real-time-finance-data.p.rapidapi.com/stock-time-series-source-2?symbol=AAPL&period=1D', {\n      method: 'GET',\n      headers: {\n        'x-rapidapi-key': '3836258f36msh5ec8f1e353d2889p18afc0jsn5f8eabe13803',\n        'x-rapidapi-host': 'real-time-finance-data.p.rapidapi.com'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log('Stock data fetched:', data); // Log the fetched data\n      setStockData(data); // Update state with fetched data\n    }).catch(error => {\n      console.error('Error fetching stock data:', error);\n      setError('Failed to fetch stock data'); // Set error state\n    });\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 21\n  }, this);\n  if (!stockData || Object.keys(stockData).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 65\n  }, this);\n\n  // Assuming the API returns an array of stock data with 'price' attribute\n  const latestStock = stockData.data ? stockData.data[0] : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Price: \", latestStock.price || 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Date: \", latestStock.date || 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(StockWidget, \"HUTFxAsjTyNtzWInyf2GZPgz21Y=\");\n_c = StockWidget;\nexport default StockWidget;\nvar _c;\n$RefreshReg$(_c, \"StockWidget\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StockWidget","_s","stockData","setStockData","error","setError","fetch","method","headers","then","response","json","data","console","log","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","latestStock","price","date","_c","$RefreshReg$"],"sources":["C:/My Files/Goals/Myprojects/dynamic-dashboard/src/components/StockWidget.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction StockWidget() {\r\n  const [stockData, setStockData] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch stock data from the new API\r\n    fetch('https://real-time-finance-data.p.rapidapi.com/stock-time-series-source-2?symbol=AAPL&period=1D', {\r\n      method: 'GET',\r\n      headers: {\r\n        'x-rapidapi-key': '3836258f36msh5ec8f1e353d2889p18afc0jsn5f8eabe13803',\r\n        'x-rapidapi-host': 'real-time-finance-data.p.rapidapi.com'\r\n      }\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Stock data fetched:', data); // Log the fetched data\r\n      setStockData(data); // Update state with fetched data\r\n    })\r\n    .catch(error => {\r\n      console.error('Error fetching stock data:', error);\r\n      setError('Failed to fetch stock data'); // Set error state\r\n    });\r\n  }, []);\r\n\r\n  if (error) return <div>{error}</div>;\r\n  if (!stockData || Object.keys(stockData).length === 0) return <div>Loading...</div>;\r\n\r\n  // Assuming the API returns an array of stock data with 'price' attribute\r\n  const latestStock = stockData.data ? stockData.data[0] : {};\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Data</h2>\r\n      <p>Current Price: {latestStock.price || 'N/A'}</p>\r\n      <p>Date: {latestStock.date || 'N/A'}</p>\r\n      {/* Add more data fields as necessary */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockWidget;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd;IACAU,KAAK,CAAC,gGAAgG,EAAE;MACtGC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACrB;IACF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAAC,CAAC,CAAC;MAC1CT,YAAY,CAACS,IAAI,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAACX,KAAK,IAAI;MACdS,OAAO,CAACT,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDC,QAAQ,CAAC,4BAA4B,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,KAAK,EAAE,oBAAOL,OAAA;IAAAiB,QAAA,EAAMZ;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACpC,IAAI,CAAClB,SAAS,IAAImB,MAAM,CAACC,IAAI,CAACpB,SAAS,CAAC,CAACqB,MAAM,KAAK,CAAC,EAAE,oBAAOxB,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;;EAEnF;EACA,MAAMI,WAAW,GAAGtB,SAAS,CAACU,IAAI,GAAGV,SAAS,CAACU,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAE3D,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrB,OAAA;MAAAiB,QAAA,GAAG,iBAAe,EAACQ,WAAW,CAACC,KAAK,IAAI,KAAK;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDrB,OAAA;MAAAiB,QAAA,GAAG,QAAM,EAACQ,WAAW,CAACE,IAAI,IAAI,KAAK;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CAAC;AAEV;AAACnB,EAAA,CAtCQD,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AAwCpB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}