{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Files\\\\Goals\\\\Myprojects\\\\dynamic-dashboard\\\\src\\\\components\\\\StockWidget.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StockWidget() {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const xhr = new XMLHttpRequest();\n    xhr.withCredentials = true;\n    xhr.addEventListener('readystatechange', function () {\n      if (this.readyState === XMLHttpRequest.DONE) {\n        if (this.status === 200) {\n          try {\n            const data = JSON.parse(this.responseText);\n            console.log('Stock data fetched:', data); // Log the fetched data\n            setStockData(data); // Update state with fetched data\n          } catch (e) {\n            console.error('Error parsing JSON:', e);\n            setError('Failed to parse stock data'); // Set error state\n          }\n        } else {\n          console.error('Error fetching stock data:', this.statusText);\n          setError('Failed to fetch stock data'); // Set error state\n        }\n      }\n    });\n    xhr.open('GET', 'https://twelve-data1.p.rapidapi.com/mutual_funds/world/ratings?symbol=VFIAX');\n    xhr.setRequestHeader('x-rapidapi-key', '3836258f36msh5ec8f1e353d2889p18afc0jsn5f8eabe13803');\n    xhr.setRequestHeader('x-rapidapi-host', 'twelve-data1.p.rapidapi.com');\n    xhr.send();\n  }, []);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  if (!stockData || Object.keys(stockData).length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 65\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Symbol: \", stockData.symbol]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", stockData.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Fund Name: \", stockData.fund_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(StockWidget, \"HUTFxAsjTyNtzWInyf2GZPgz21Y=\");\n_c = StockWidget;\nexport default StockWidget;\nvar _c;\n$RefreshReg$(_c, \"StockWidget\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StockWidget","_s","stockData","setStockData","error","setError","xhr","XMLHttpRequest","withCredentials","addEventListener","readyState","DONE","status","data","JSON","parse","responseText","console","log","e","statusText","open","setRequestHeader","send","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","length","symbol","rating","fund_name","_c","$RefreshReg$"],"sources":["C:/My Files/Goals/Myprojects/dynamic-dashboard/src/components/StockWidget.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction StockWidget() {\r\n  const [stockData, setStockData] = useState({});\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.withCredentials = true;\r\n\r\n    xhr.addEventListener('readystatechange', function () {\r\n      if (this.readyState === XMLHttpRequest.DONE) {\r\n        if (this.status === 200) {\r\n          try {\r\n            const data = JSON.parse(this.responseText);\r\n            console.log('Stock data fetched:', data); // Log the fetched data\r\n            setStockData(data); // Update state with fetched data\r\n          } catch (e) {\r\n            console.error('Error parsing JSON:', e);\r\n            setError('Failed to parse stock data'); // Set error state\r\n          }\r\n        } else {\r\n          console.error('Error fetching stock data:', this.statusText);\r\n          setError('Failed to fetch stock data'); // Set error state\r\n        }\r\n      }\r\n    });\r\n\r\n    xhr.open('GET', 'https://twelve-data1.p.rapidapi.com/mutual_funds/world/ratings?symbol=VFIAX');\r\n    xhr.setRequestHeader('x-rapidapi-key', '3836258f36msh5ec8f1e353d2889p18afc0jsn5f8eabe13803');\r\n    xhr.setRequestHeader('x-rapidapi-host', 'twelve-data1.p.rapidapi.com');\r\n\r\n    xhr.send();\r\n  }, []);\r\n\r\n  if (error) return <div>{error}</div>;\r\n  if (!stockData || Object.keys(stockData).length === 0) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Stock Data</h2>\r\n      {/* Customize this based on the actual structure of the fetched data */}\r\n      <p>Symbol: {stockData.symbol}</p>\r\n      <p>Rating: {stockData.rating}</p>\r\n      <p>Fund Name: {stockData.fund_name}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockWidget;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}